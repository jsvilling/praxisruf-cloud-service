plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id "io.freefair.lombok"
    id 'java'
}

group 'ch.fhnw.ip5.praxis.intercom'
version '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {

    // WS Tst
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'com.google.code.gson:gson'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // Internal
    implementation runtimeOnly(project(':praxisruf-commons'))
    implementation runtimeOnly(project(':praxisruf-configuration'))
    implementation runtimeOnly(project(':praxisruf-notification'))
    implementation runtimeOnly(project(':praxisruf-speech-synthesis'))
    implementation runtimeOnly(project(':praxisruf-intercom'))

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Persistence
    implementation("org.postgresql:postgresql")

    // Firebase
    implementation 'com.google.firebase:firebase-admin:7.1.1'

    // AWS Polly
    implementation 'com.amazonaws:aws-java-sdk-polly:1.11.77'

    // Swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.1'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.1'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'io.projectreactor:reactor-test'
}

test {
    useJUnitPlatform()
}

bootJar {
    enabled = true
}

